############################
# Oh-My-Zsh & Plugins Configuration
############################

# >>> Fast completions (static, cached)
source "$HOME/.zsh/_completions.zsh"
# <<< Fast completions

export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="chussenot"

# History configuration
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS
setopt SHARE_HISTORY

############################
# Tmux Session Management
############################

# Check if we are inside a tmux session
if [ -z "$TMUX" ]; then
  # We are not inside tmux, try to attach to an existing session 0 if it exists
  tmux attach-session -t default 2>/dev/null || tmux new-session -s default
fi

############################
# General Environment Variables
############################

export ENABLE_WASM=
export EDITOR="nvim"
export VISUAL="nvim" 
export SHELL='/usr/bin/zsh'

export EDITOR='vim'

# Language and locale settings
export LC_CTYPE=en_US.UTF-8
export LANG=en_US.UTF-8
export PATH=$HOME/.local/bin:$PATH

############################
# Language and Runtime Settings
############################

# Mise en place
# export MISE_VERBOSE=1
# export RUST_BACKTRACE=1
export MISE_HOME="$HOME/.mise"
# eval "$(~/.local/bin/mise activate zsh --shims)"
eval "$(~/.local/bin/mise activate zsh)"
# export PATH="$HOME/.local/share/mise/shims:$PATH"

# Rust
export PATH=$HOME/.cargo/bin:$PATH

############################
# Zinit Plugin Manager
############################

# Install Zinit if not present
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33}Installing %F{220}ZDHARMA-CONTINUUM %F{33}Plugin Manager...%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone --depth=1 https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33}✓ %F{34}Installation successful.%f" || \
        print -P "%F{160}✗ Installation failed.%f"
fi

# Load Zinit
source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

############################
# Completion System
############################

# Completion styling (compinit is handled by _completions.zsh)
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' special-dirs true
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

############################
# Zinit Plugins
############################

# Load Zinit annexes
zinit light-mode wait"0" lucid for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

# Navigation and productivity plugins
zinit wait"0" lucid for \
    blockf atpull"zinit creinstall -q ." \
    zsh-users/zsh-completions

# Syntax highlighting
zinit ice wait"0" lucid atinit"ZINIT[COMPINIT_OPTS]=-C"
zinit light zdharma-continuum/fast-syntax-highlighting

# Custom fzf history search (replaces plugin)
fzf-history-widget() {
  local selected num
  setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2>/dev/null
  selected=( $(fc -rl 1 | awk '!seen[$0]++' | grep -v -E '(nim|data)' | 
    FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS --tac -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS --query=${(q)LBUFFER} +m" $(__fzfcmd)) )
  local ret=$?
  if [ -n "$selected" ]; then
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
    fi
  fi
  zle reset-prompt
  return $ret
}
zle     -N   fzf-history-widget
bindkey '^R' fzf-history-widget

# Git tools
zinit ice wait"1" lucid
zinit light paulirish/git-open

# Oh-My-Zsh plugins (completion-heavy plugins only)
zinit wait"1" lucid for \
    OMZP::extract \
    OMZP::sudo \
    OMZP::git \
    OMZP::direnv \
    OMZP::gh \
    OMZP::git-extras \
    OMZP::gitignore \

############################
# Key Bindings
############################

# Navigation and history search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^[[1;5C' forward-word   # Ctrl+Right
bindkey '^[[1;5D' backward-word  # Ctrl+Left

# Plugin list (minimal - completions handled by _completions.zsh)
plugins=(
  git
  sudo
  extract
  direnv
  gh
  git-extras
  gitignore
)

# Load local Zsh configurations from ~/.zsh.local
if [[ -d "$HOME/.zsh.local" ]]; then
  for file in "$HOME/.zsh.local"/*.zsh; do
    [[ -f "$file" ]] && source "$file"
  done
fi

# Load aliases
if [[ -f "$HOME/.zsh/aliases.zsh" ]]; then
  source "$HOME/.zsh/aliases.zsh"
fi

# Load functions
if [[ -f "$HOME/.zsh/functions.zsh" ]]; then
  source "$HOME/.zsh/functions.zsh"
fi

############################
# Security
############################

# Pdtm - Project Discovery 
# https://projectdiscovery.io/
export PATH=$PATH:$HOME/.pdtm/go/bin

# Kubectl Krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

############################
# Fuzzy Finder & Directory Navigation
############################

# Jump in directories
[ -f ~/z.sh ] && source ~/z.sh

# General Fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

source $ZSH/oh-my-zsh.sh
autoload -U +X bashcompinit && bashcompinit
export MANPATH="$HOME/.local/share/man:$MANPATH"
